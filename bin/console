#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "irb"
require "byebug" # Call "byebug" anywhere in the code to debug.

# Define a method to facilitate the reloading of code changes.
def reload
  original_verbose = $VERBOSE
  $VERBOSE = nil              # Suppress warning messages (from reloading CONSTANTS).
  load "load.rb"              # (Re)load all code changes.
  $VERBOSE = original_verbose # Activate warning messages again globally.
  true
end

# Load the most recent code into the session and include modules etc.
reload

# Load any fixture data into the session.
def sample
  proc do
    html do
      head # Render an empty <head></head> element
      body do
        h1 { "Use a block to return a String of innerText or more elements" }
        div data_test_id: "String attribute values will be parsed as is" do
            h2(data_x: :sub_heading) { "Symbol attribute keys/values will be kebab-cased" }
            p(class: [:content, :italic_text], id: :paragraph) do
              "You can pass an array of attribute values and they will be space separated"
            end
            text { "Set the div's innerText before and after its child elements" }
            element("CustomElement", id: :custom_element) { "Render the raw element (case insensitive)" }
        end
        footer
      end
    end
  end
end

IRB.start(__FILE__)
